{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xC1lex Delgado\\\\Desktop\\\\Bootcamp SweetCodeAlabama\\\\MadeByRicardo\\\\Pocratech\\\\pocratech\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // import UserContext from \"./context/UserContext\";\n\nimport { AuthProvider } from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\nimport RegisterForm from \"./components/Auth/RegisterForm\";\nimport LoginForm from \"./components/Auth/LoginForm\";\nimport { CardPoke } from \"./components/CardPoke/CardPoke\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemon, setPokemon] = useState({});\n  const [decodeToken, setDecodeToken] = useState({});\n  const [token, setToken] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  console.log(trigerPokedex);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchPokemons();\n    getTokenLocalStorage();\n    getPokemonData2();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      console.log(\"data:\", data);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Traemos la información de cada Pokemon\n\n\n  const getPokemonData2 = async () => {\n    let url = \"https://pokeapi.co/api/v2/pokemon/100\";\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setPokemon(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Simulamos que traemos información del usuario\n\n\n  const userData = {\n    username: \"Ricardo\",\n    school: \"Socratech\",\n    year: 2021\n  }; // Register user\n  // const newUser = () => {\n  //   axios\n  //     .post(\"http://localhost:4000/users/saveUser\", {\n  //       name: \"Pocha\",\n  //       user_name: \"pochita\",\n  //       password: \"123\",\n  //     })\n  //     .then((response) => {\n  //       console.log(response);\n  //     });\n  // };\n\n  const TOKEN = \"token\"; // Login user\n  //localhost:4000/users/login\n  // const loginUser = () => {\n  //   axios\n  //     .post(\"http://localhost:4000/users/login\", {\n  //       user_name: \"pochita\",\n  //       password: \"123\",\n  //     })\n  //     .then((response) => {\n  //       setDecodeToken(jwtDecode(response.data.token));\n  //       console.log(jwtDecode(response.data.token));\n  //       localStorage.setItem(TOKEN, response.data.token);\n  //       setToken(localStorage.getItem(TOKEN));\n  //     });\n  // };\n\n  const getTokenLocalStorage = () => {\n    setToken(localStorage.getItem(TOKEN));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(TOKEN);\n    setToken(null);\n  }; //localhost:4000/pokemon/:user_id/:pokemon_id\n  // Guardar pokemon por usuario\n\n\n  const newPokemon = pokemonID => {\n    const decodeUser = jwtDecode(token);\n    const userID = decodeUser.user.id;\n    axios.post(`http://localhost:4000/pokemon/${userID}/${pokemonID}`, {}).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTrigerPokedex(!trigerPokedex),\n        children: \"Descubre Pokemones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), pokemons.map((pokemon, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => newPokemon(pokemon.id),\n            children: \"Agregar pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(PokeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), token ? \"Bieeeeeeeeen!\" : \"Mal\", showLogin ? /*#__PURE__*/_jsxDEV(LoginForm, {\n        setShowLogin: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n        setShowLogin: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpen,\n        children: \"Open modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: !isLoading ? /*#__PURE__*/_jsxDEV(CardPoke, {\n            pokemon: pokemon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 30\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"i2goGrXZm86oh46b7LBxpsiYG1Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Álex Delgado/Desktop/Bootcamp SweetCodeAlabama/MadeByRicardo/Pocratech/pocratech/client/src/App.js"],"names":["useEffect","useState","axios","jwtDecode","AuthProvider","getPokemons","getPokemonData","PokeCard","RegisterForm","LoginForm","CardPoke","Box","Modal","App","trigerPokedex","setTrigerPokedex","pokemons","setPokemons","pokemon","setPokemon","decodeToken","setDecodeToken","token","setToken","showLogin","setShowLogin","isLoading","setIsLoading","open","setOpen","console","log","handleOpen","handleClose","fetchPokemons","getTokenLocalStorage","getPokemonData2","data","promises","results","map","url","result","Promise","all","error","response","fetch","json","userData","username","school","year","TOKEN","localStorage","getItem","logout","removeItem","newPokemon","pokemonID","decodeUser","userID","user","id","post","then","idx","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n// import UserContext from \"./context/UserContext\";\r\nimport { AuthProvider } from \"./context/UserContext\";\r\nimport { getPokemons, getPokemonData } from \"./services/api\";\r\nimport PokeCard from \"./components/PokeCard\";\r\nimport RegisterForm from \"./components/Auth/RegisterForm\";\r\nimport LoginForm from \"./components/Auth/LoginForm\";\r\nimport { CardPoke } from \"./components/CardPoke/CardPoke\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nfunction App() {\r\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [pokemon, setPokemon] = useState({});\r\n  const [decodeToken, setDecodeToken] = useState({});\r\n  const [token, setToken] = useState(null);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  console.log(trigerPokedex);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchPokemons();\r\n    getTokenLocalStorage();\r\n    getPokemonData2();\r\n  }, [trigerPokedex]);\r\n\r\n  const fetchPokemons = async () => {\r\n    try {\r\n      const data = await getPokemons();\r\n      console.log(\"data:\", data);\r\n      const promises = data.results.map(async (pokemon) => {\r\n        return await getPokemonData(pokemon.url);\r\n      });\r\n      const result = await Promise.all(promises);\r\n      setPokemons(result);\r\n\r\n      console.log(result);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Traemos la información de cada Pokemon\r\n  const getPokemonData2 = async () => {\r\n    let url = \"https://pokeapi.co/api/v2/pokemon/100\";\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setPokemon(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Simulamos que traemos información del usuario\r\n  const userData = {\r\n    username: \"Ricardo\",\r\n    school: \"Socratech\",\r\n    year: 2021,\r\n  };\r\n  // Register user\r\n  // const newUser = () => {\r\n  //   axios\r\n  //     .post(\"http://localhost:4000/users/saveUser\", {\r\n  //       name: \"Pocha\",\r\n  //       user_name: \"pochita\",\r\n  //       password: \"123\",\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(response);\r\n  //     });\r\n  // };\r\n\r\n  const TOKEN = \"token\";\r\n  // Login user\r\n  //localhost:4000/users/login\r\n  // const loginUser = () => {\r\n  //   axios\r\n  //     .post(\"http://localhost:4000/users/login\", {\r\n  //       user_name: \"pochita\",\r\n  //       password: \"123\",\r\n  //     })\r\n  //     .then((response) => {\r\n  //       setDecodeToken(jwtDecode(response.data.token));\r\n  //       console.log(jwtDecode(response.data.token));\r\n  //       localStorage.setItem(TOKEN, response.data.token);\r\n  //       setToken(localStorage.getItem(TOKEN));\r\n  //     });\r\n  // };\r\n\r\n  const getTokenLocalStorage = () => {\r\n    setToken(localStorage.getItem(TOKEN));\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(TOKEN);\r\n    setToken(null);\r\n  };\r\n\r\n  //localhost:4000/pokemon/:user_id/:pokemon_id\r\n\r\n  // Guardar pokemon por usuario\r\n  const newPokemon = (pokemonID) => {\r\n    const decodeUser = jwtDecode(token);\r\n    const userID = decodeUser.user.id;\r\n    axios\r\n      .post(`http://localhost:4000/pokemon/${userID}/${pokemonID}`, {})\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"App\">\r\n        <button onClick={() => setTrigerPokedex(!trigerPokedex)}>\r\n          Descubre Pokemones\r\n        </button>\r\n        {/* <button onClick={newUser}>Crear usuarios</button>\r\n        <button onClick={loginUser}>Login usuarios</button> */}\r\n        <button onClick={logout}>Cerrar sesión</button>\r\n\r\n        {pokemons.map((pokemon, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              <p>{pokemon.name}</p>\r\n              <button onClick={() => newPokemon(pokemon.id)}>\r\n                Agregar pokemon\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <PokeCard />\r\n        {token ? \"Bieeeeeeeeen!\" : \"Mal\"}\r\n\r\n        {showLogin ? (\r\n          <LoginForm setShowLogin={setShowLogin} />\r\n        ) : (\r\n          <RegisterForm setShowLogin={setShowLogin} />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <Button onClick={handleOpen}>Open modal</Button>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box>{!isLoading ? <CardPoke pokemon={pokemon} /> : null}</Box>\r\n        </Modal>\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}