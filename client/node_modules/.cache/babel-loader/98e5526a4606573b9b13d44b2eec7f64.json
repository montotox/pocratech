{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xC1lex Delgado\\\\Desktop\\\\Bootcamp SweetCodeAlabama\\\\MadeByRicardo\\\\Pocratech\\\\pocratech\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // import UserContext from \"./context/UserContext\";\n\nimport { AuthProvider } from \"./context/UserContext\";\nimport { getPokemons, getPokemonData } from \"./services/api\";\nimport PokeCard from \"./components/PokeCard\";\nimport RegisterForm from \"./components/Auth/RegisterForm\";\nimport LoginForm from \"./components/Auth/LoginForm\";\nimport AlternativeCard from \"./components/AlternativeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  const [decodeToken, setDecodeToken] = useState({});\n  const [token, setToken] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  console.log(trigerPokedex);\n  useEffect(() => {\n    fetchPokemons();\n    getTokenLocalStorage();\n  }, [trigerPokedex]);\n\n  const fetchPokemons = async () => {\n    try {\n      const data = await getPokemons();\n      console.log(\"data:\", data);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const result = await Promise.all(promises);\n      setPokemons(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Simulamos que traemos información del usuario\n\n\n  const userData = {\n    username: \"Ricardo\",\n    school: \"Socratech\",\n    year: 2021\n  }; // Register user\n  // const newUser = () => {\n  //   axios\n  //     .post(\"http://localhost:4000/users/saveUser\", {\n  //       name: \"Pocha\",\n  //       user_name: \"pochita\",\n  //       password: \"123\",\n  //     })\n  //     .then((response) => {\n  //       console.log(response);\n  //     });\n  // };\n\n  const TOKEN = \"token\"; // Login user\n  //localhost:4000/users/login\n  // const loginUser = () => {\n  //   axios\n  //     .post(\"http://localhost:4000/users/login\", {\n  //       user_name: \"pochita\",\n  //       password: \"123\",\n  //     })\n  //     .then((response) => {\n  //       setDecodeToken(jwtDecode(response.data.token));\n  //       console.log(jwtDecode(response.data.token));\n  //       localStorage.setItem(TOKEN, response.data.token);\n  //       setToken(localStorage.getItem(TOKEN));\n  //     });\n  // };\n\n  const getTokenLocalStorage = () => {\n    setToken(localStorage.getItem(TOKEN));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(TOKEN);\n    setToken(null);\n  }; //localhost:4000/pokemon/:user_id/:pokemon_id\n  // Guardar pokemon por usuario\n\n\n  const newPokemon = pokemonID => {\n    const decodeUser = jwtDecode(token);\n    const userID = decodeUser.user.id;\n    axios.post(`http://localhost:4000/pokemon/${userID}/${pokemonID}`, {}).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTrigerPokedex(!trigerPokedex),\n        children: \"Descubre Pokemones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), pokemons.map((pokemon, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => newPokemon(pokemon.id),\n            children: \"Agregar pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(PokeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), token ? \"Bieeeeeeeeen!\" : \"Mal\", showLogin ? /*#__PURE__*/_jsxDEV(LoginForm, {\n        setShowLogin: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n        setShowLogin: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c8H0/M67FXW8fV0zsEbpe3v+dVQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Álex Delgado/Desktop/Bootcamp SweetCodeAlabama/MadeByRicardo/Pocratech/pocratech/client/src/App.js"],"names":["useEffect","useState","axios","jwtDecode","AuthProvider","getPokemons","getPokemonData","PokeCard","RegisterForm","LoginForm","AlternativeCard","App","trigerPokedex","setTrigerPokedex","pokemons","setPokemons","decodeToken","setDecodeToken","token","setToken","showLogin","setShowLogin","console","log","fetchPokemons","getTokenLocalStorage","data","promises","results","map","pokemon","url","result","Promise","all","error","userData","username","school","year","TOKEN","localStorage","getItem","logout","removeItem","newPokemon","pokemonID","decodeUser","userID","user","id","post","then","response","idx","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n// import UserContext from \"./context/UserContext\";\r\nimport { AuthProvider } from \"./context/UserContext\";\r\nimport { getPokemons, getPokemonData } from \"./services/api\";\r\nimport PokeCard from \"./components/PokeCard\";\r\nimport RegisterForm from \"./components/Auth/RegisterForm\";\r\nimport LoginForm from \"./components/Auth/LoginForm\";\r\nimport AlternativeCard from \"./components/AlternativeCard\";\r\n\r\nfunction App() {\r\n  const [trigerPokedex, setTrigerPokedex] = useState(true);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [decodeToken, setDecodeToken] = useState({});\r\n  const [token, setToken] = useState(null);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  console.log(trigerPokedex);\r\n\r\n  useEffect(() => {\r\n    fetchPokemons();\r\n    getTokenLocalStorage();\r\n  }, [trigerPokedex]);\r\n\r\n  const fetchPokemons = async () => {\r\n    try {\r\n      const data = await getPokemons();\r\n      console.log(\"data:\", data);\r\n      const promises = data.results.map(async (pokemon) => {\r\n        return await getPokemonData(pokemon.url);\r\n      });\r\n      const result = await Promise.all(promises);\r\n      setPokemons(result);\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Simulamos que traemos información del usuario\r\n  const userData = {\r\n    username: \"Ricardo\",\r\n    school: \"Socratech\",\r\n    year: 2021,\r\n  };\r\n  // Register user\r\n  // const newUser = () => {\r\n  //   axios\r\n  //     .post(\"http://localhost:4000/users/saveUser\", {\r\n  //       name: \"Pocha\",\r\n  //       user_name: \"pochita\",\r\n  //       password: \"123\",\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(response);\r\n  //     });\r\n  // };\r\n\r\n  const TOKEN = \"token\";\r\n  // Login user\r\n  //localhost:4000/users/login\r\n  // const loginUser = () => {\r\n  //   axios\r\n  //     .post(\"http://localhost:4000/users/login\", {\r\n  //       user_name: \"pochita\",\r\n  //       password: \"123\",\r\n  //     })\r\n  //     .then((response) => {\r\n  //       setDecodeToken(jwtDecode(response.data.token));\r\n  //       console.log(jwtDecode(response.data.token));\r\n  //       localStorage.setItem(TOKEN, response.data.token);\r\n  //       setToken(localStorage.getItem(TOKEN));\r\n  //     });\r\n  // };\r\n\r\n  const getTokenLocalStorage = () => {\r\n    setToken(localStorage.getItem(TOKEN));\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(TOKEN);\r\n    setToken(null);\r\n  };\r\n\r\n  //localhost:4000/pokemon/:user_id/:pokemon_id\r\n\r\n  // Guardar pokemon por usuario\r\n  const newPokemon = (pokemonID) => {\r\n    const decodeUser = jwtDecode(token);\r\n    const userID = decodeUser.user.id;\r\n    axios\r\n      .post(`http://localhost:4000/pokemon/${userID}/${pokemonID}`, {})\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"App\">\r\n        <button onClick={() => setTrigerPokedex(!trigerPokedex)}>\r\n          Descubre Pokemones\r\n        </button>\r\n        {/* <button onClick={newUser}>Crear usuarios</button>\r\n        <button onClick={loginUser}>Login usuarios</button> */}\r\n        <button onClick={logout}>Cerrar sesión</button>\r\n\r\n        {pokemons.map((pokemon, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              <p>{pokemon.name}</p>\r\n              <button onClick={() => newPokemon(pokemon.id)}>\r\n                Agregar pokemon\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <PokeCard />\r\n        {token ? \"Bieeeeeeeeen!\" : \"Mal\"}\r\n        {showLogin ? (\r\n          <LoginForm setShowLogin={setShowLogin} />\r\n        ) : (\r\n          <RegisterForm setShowLogin={setShowLogin} />\r\n        )}\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}